@page "/article/{id:int}"
@inject HttpClient HttpClient
@inject BlazorUser BlazorUser

<nav class="py-3 navbar navbar-expand-lg  mb-5">
    <div class="container">
        <h2> Школа выживания</h2>
        <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarSupportedContent"
            aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
            <span class="navbar-toggler-icon"></span>
        </button>
        <div class="collapse navbar-collapse" id="navbarSupportedContent">
            <ul class="navbar-nav ms-auto">
                <li class="nav-item">
                    <a class="nav-link" href="#">Главная</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" href="/articles">Статьи</a>
                </li>
                @*   <li class="nav-item">
                <a class="nav-link" href="#">Форум</a>
                </li> *@
                @if (BlazorUser.User != null)
                {
                    <li class="nav-item">
                        <a class="nav-link" href="/profile">Личный кабинет</a>
                    </li>
                }
                else
                {
                    <li class="nav-item">
                        <a class="nav-link" href="/login">Войти</a>
                    </li>
                }
            </ul>
        </div>
    </div>
</nav>


@if (Lecture == null)
{
    <div class="d-flex justify-content-center align-items-center " style="height: 100vh;">
        <div class="spinner-border" role="status">
            <span class="visually-hidden">Загрузка...</span>
        </div>
    </div>
}
else
{
    <div class="container mt-5 mb-5">
        <div class="row justify-content-center">
            <div class="col-md-10">
                <div class="card">
                    <div class="card-body">
                        <div class="mt-1">
                            <a href="/articles" class="btn btn-art"> <i class="bi bi-arrow-left"></i> </a>
                        </div>
                        <h3 class="title " style="color: #1b2e35; font-weight: bold; text-align: center;">
                            @Lecture.Title
                        </h3>
                        <div class="article-content"
                            style="white-space: pre-wrap; word-wrap: break-word; line-height: 1.6; font-size: 1.1rem; padding: 20px; border-radius: 5px;">
                            @Lecture.Content
                            <p class="text-muted">
                                @Lecture.CreatedDate.ToShortDateString()
                            </p>
                        </div>

                    </div>
                </div>
            </div>
        </div>
    </div>
}


@code {
    [Parameter]
    public int Id { get; set; }

    private GetLectureResponse Lecture;

    protected override async Task OnInitializedAsync()
    {
        HttpClient client = new HttpClient();
        client.BaseAddress = new Uri("https://survivalschoolfinalapi.onrender.com/");
        Lecture = await client.GetFromJsonAsync<GetLectureResponse>($"api/Lecture/{Id}");
    }

    public class GetLectureResponse
    {
        public int LectureID { get; set; }
        public string Title { get; set; }
        public string Content { get; set; }
        public int CreatedBy { get; set; } // Надо сделать так чтобы показывался не id а никнейм автора статьи
        public DateTime CreatedDate { get; set; }
    }
}