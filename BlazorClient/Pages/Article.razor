@page "/article/{id:int}"
@inject HttpClient HttpClient

<h3>Статья</h3>

@if (Lecture == null)
{
    <p>Загрузка...</p>
}
else
{
    <h3>@Lecture.Title</h3>
    <p>@Lecture.Content</p>
    <p>Дата создания: @Lecture.CreatedDate.ToShortDateString()</p>
}

@code {
    [Parameter]
    public int Id { get; set; }

    private GetLectureResponse Lecture;

    protected override async Task OnInitializedAsync()
    {
        HttpClient client = new HttpClient();
        client.BaseAddress = new Uri("https://apisurvival-i6wx8ysg.b4a.run");
        Lecture = await client.GetFromJsonAsync<GetLectureResponse>($"api/Lecture/{Id}");
    }


    private async Task<string> GetAuthorName(int userId)
    {
        // Здесь вам нужно сделать запрос на получение имени пользователя по его ID.
        // Пример (адаптируйте под вашу API):
        var author = await HttpClient.GetFromJsonAsync<AuthorResponse>($"api/User/{userId}");
        return author?.UserName ?? "Неизвестный автор";
    }

    public class AuthorResponse
    {
        public string UserName { get; set; }
    }

    public class GetLectureResponse
    {
        public int LectureID { get; set; }
        public string Title { get; set; }
        public string Content { get; set; }
        public int CreatedBy { get; set; } // Надо сделать так чтобы показывался не id а никнейм автора статьи
        public DateTime CreatedDate { get; set; }
    }

}
