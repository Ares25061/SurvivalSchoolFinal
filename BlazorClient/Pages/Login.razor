@page "/login"
@inject IJSRuntime JSRuntime
@inject NavigationManager NavigationManager
@inject BlazorUser User

@using System.Text.Json

<section class="bg-green ">
    <div class="mask d-flex align-items-center gradient-custom-3 vh-100 main-content">
        <div class="container">
            <div class="row justify-content-center">
                <div class="col-12 col-md-8 col-lg-6 col-xl-5">
                    <div class="card border shadow p-3 mb-5 bg-white" style="border-radius: 15px;">
                        <div class="card-body">
                            <h2 class="text-center mb-1">Вход</h2>
                            <form>
                                <div class="form-group mb-3 text-start">
                                    <label for="email"><b>Почта</b></label>
                                    <input type="email" class="form-control" @bind="Email"
                                           placeholder="example@mail.com">
                                    @if (ShowEmailMessage)
                                    {
                                        <p class="text-danger">Почта не введена</p>
                                    }
                                    @if (ShowInvalidEmailMessage && !ShowEmailMessage)
                                    {
                                        <p class="text-danger">Неверный формат email</p>
                                    }
                                </div>
                                <div class="form-group mb-3 text-start">
                                    <label for="password"><b>Пароль</b></label>
                                    <input type="password" class="form-control" @bind="Pass"
                                           placeholder="Введите пароль">
                                    @if (ShowPasswordMessage)
                                    {
                                        <p class="text-danger">Пароль не введен</p>
                                    }
                                </div>
                                @if (!LoginSuccess && !string.IsNullOrEmpty(Email) && !string.IsNullOrEmpty(Pass))
                                {
                                    <p class="text-danger">Неверный ввод почты или пароля</p>
                                }
                                <div class="w-100 d-flex justify-content-center">
                                    <button type="button" class="btn btn-primary btn-lg" @onclick="CheckFields">
                                        Войти
                                    </button>
                                </div>
                                <p class="text-center text-muted mt-2 mb-0">
                                    Нет аккаунта? <a href="/registration"
                                                     class="fw-bold text-body"><u>Регистрация</u></a>
                                </p>
                            </form>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>

@code {
    private string Email { get; set; }
    private string Pass { get; set; }
    private bool ShowEmailMessage { get; set; }
    private bool ShowInvalidEmailMessage { get; set; }
    private bool ShowPasswordMessage { get; set; }
    private bool LoginSuccess { get; set; }

    private async Task CheckFields()
    {
        ShowEmailMessage = string.IsNullOrEmpty(Email);
        ShowInvalidEmailMessage = !IsValidEmail(Email);
        ShowPasswordMessage = string.IsNullOrEmpty(Pass);

        if (!ShowEmailMessage && !ShowInvalidEmailMessage && !ShowPasswordMessage)
        {
            await UserEnter();
        }
    }

    private bool IsValidEmail(string email)
    {
        try
        {
            var addr = new System.Net.Mail.MailAddress(email);
            return addr.Address == email;
        }
        catch
        {
            return false;
        }
    }

    private async Task UserEnter()
    {
        HttpClient client = new HttpClient();
        client.BaseAddress = new Uri("https://bankprikoloff.onrender.com/");

        if (string.IsNullOrEmpty(Email) || string.IsNullOrEmpty(Pass))
        {
            throw new ArgumentException("Login or password is empty");
        }

        HttpResponseMessage response = await client.GetAsync($"api/User/{Email}/{Pass}");
        await ShowStatus(response);

        if (response.IsSuccessStatusCode)
        {
            NavigationManager.NavigateTo("/personal");
        }
        else
        {
            LoginSuccess = false;
        }
    }

    private async Task ShowStatus(HttpResponseMessage response)
    {
        var title = "Уведомление";
        var options = new
        {
            body = $"Ответ сервера: {response.StatusCode}",
        };
        await JSRuntime.InvokeVoidAsync("notification.showNotification", title, options);
    }
}