@page "/profile"
@inject IJSRuntime JSRuntime
@inject NavigationManager NavigationManager
@inject BlazorUser BlazorUser
@using System.Text.Json

<nav class="py-3 navbar navbar-expand-lg fixed-top auto-hiding-navbar">
    <div class="container">
        <h2> Школа выживания</h2>
        <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarSupportedContent"
            aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
            <span class="navbar-toggler-icon"></span>
        </button>
        <div class="collapse navbar-collapse" id="navbarSupportedContent">
            <ul class="navbar-nav ms-auto">
                <li class="nav-item">
                    <a class="nav-link" href="/">Главная</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" href="/articles">Статьи</a>
                </li>
                @if (BlazorUser.User != null)
                {
                    <li class="nav-item">
                        <a class="nav-link active" aria-current="page" href="/profile">Личный кабинет</a>
                    </li>
                }
                else
                {
                    <li class="nav-item">
                        <a class="nav-link" href="/login">Войти</a>
                    </li>
                }
            </ul>
        </div>
    </div>
</nav>

<section class="bg-green">
    <div class="mask d-flex align-items-center gradient-custom-3 vh-100 main-content">
        <div class="container">
            <div class="row justify-content-center">
                <div class="col-12 col-md-8 col-lg-6 col-xl-5">
                    <div class="card border shadow p-3 mb-5 bg-white" style="border-radius: 15px;">
                        <div class="card-body">
                            <h2 class="text-center mb-1">Личный кабинет</h2>
                            @if (BlazorUser != null && BlazorUser.User != null)
                            {
                                <div class="form-group mb-3 text-start">
                                    <label for="username"><b>Логин</b></label>
                                    <p>@BlazorUser.User.Username</p>
                                </div>
                                <div class="form-group mb-3 text-start">
                                    <label for="email"><b>Почта</b></label>
                                    <p>@BlazorUser.User.Email</p>
                                </div>
                                <div class="form-group mb-3 text-start">
                                    <label for="firstName"><b>Имя</b></label>
                                    <p>@BlazorUser.User.FirstName</p>
                                </div>
                                <div class="form-group mb-3 text-start">
                                    <label for="lastName"><b>Фамилия</b></label>
                                    <p>@BlazorUser.User.LastName</p>
                                </div>
                                <div class="form-group mb-3 text-start">
                                    <label for="registrationDate"><b>Дата регистрации</b></label>
                                    <p>@BlazorUser.User.RegistrationDate.ToString("dd.MM.yyyy")</p>
                                </div>
                                <div class="form-group mb-3 text-center">
                                    <button class="btn btn-danger" @onclick="Logout">Выход из аккаунта</button>
                                </div>
                            }
                            else
                            {
                                <div class="alert alert-danger" role="alert">
                                    Информация о пользователе не найдена.
                                </div>
                            }
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>

@code {
    public string Login { get; set; }
    public string Password { get; set; }
    public string FirstName { get; set; }
    public string LastName { get; set; }
    public string Email { get; set; }
    private bool NoPatronymic { get; set; }
    private bool ShowEmailMessage { get; set; }
    private bool ShowFirstNameMessage { get; set; }
    private bool ShowLastNameMessage { get; set; }
    private bool ShowInvalidEmailMessage { get; set; }

    User user = new User();

    protected override void OnInitialized()
    {
        if (BlazorUser.User == null)
        {
            NavigationManager.NavigateTo("/");
        }
        else
        {
            user = BlazorUser.User;
        }
    }

    private bool IsValidEmail(string email)
    {
        if (string.IsNullOrWhiteSpace(email))
            return false;

        try
        {
            // Проверка на соответствие формату email
            var addr = new System.Net.Mail.MailAddress(email);
            return addr.Address == email;
        }
        catch
        {
            return false;
        }
    }

    private async Task Logout()
    {
        // Очистка данных пользователя
        BlazorUser.User = null;

        // Очистка localStorage (если используется)
        await JSRuntime.InvokeVoidAsync("localStorage.removeItem", "user");

        // Перенаправление на главную страницу
        NavigationManager.NavigateTo("/");
    }
}